datasource db {
    provider = "sqlite"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id    String @id @default(cuid())
    email String @unique

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    password Password?

    topics   Topic[]
    comments Comment[]
    likes    Like[]
    assigned Assignee[]
}

model Password {
    hash String

    user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    userId String @unique
}

model Topic {
    id          String @id @default(cuid())
    title       String
    description String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    userId String

    comments  Comment[]
    likes     Like[]
    assignees Assignee[]
}

model Comment {
    id   String @id @default(cuid())
    text String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    userId String

    topic   Topic  @relation(fields: [topicId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    topicId String
}

model Like {
    id String @id @default(cuid())

    createdAt DateTime @default(now())

    user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    userId String

    topic   Topic  @relation(fields: [topicId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    topicId String
}

model Assignee {
    id String @id @default(cuid())

    createdAt DateTime @default(now())

    user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    userId String

    topic   Topic  @relation(fields: [topicId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    topicId String
}
